server:
  port: 15000

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/sarafan
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
#logging:
#  level:
#    org:
#      springframework:
#        messaging: trace
#      web:
#        socket: trace
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins:
      http://localhost:3000,
      http://localhost:8080,
      http://localhost:15000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
  kafka:
    topic: sarafan
    bootstrap_broker: localhost:9092
    group_id: sand-box